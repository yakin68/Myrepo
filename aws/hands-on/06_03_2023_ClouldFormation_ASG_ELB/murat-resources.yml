AWSTemplateFormatVersion: 2010-09-09
Description: |
  This hands on shows how to create ASG with ELB and LT via CloudFormation Template.
  
Parameters:
  InstanceType:
    Description: Choose the instance type to launch.
    Type: String
    AllowedValues:
      - t2.micro
      - t3.micro
      - t2.nano

  MyKeyPair:
    Description: Choose the key name you you want to use.
    Type: AWS::EC2::KeyPair::KeyName
    
  EnvType:
    Description: Choose the environment type you work.
    Type: String
    AllowedValues:
    - prod
    - test   

  Subnets:
    Description: Select at least two subnets from the list.
    Type: List<AWS::EC2::Subnet::Id>  # AWS::EC2::Subnet::Id  şeklinde yazsaydık listeden tek bir tane seçtirirdi.

  VPC:
    Description: Select only one VPC
    Type: AWS::EC2::VPC::Id 
  
  
Mappings:
  RegionImageMap:
    us-east-1:
      prod: ami-0715c1897453cabd1
      test: ami-0bef6cc322bfff646
    us-east-2:
      prod: ami-01107263728f3bef4
      test: ami-05842f1afbf311a43
    us-west-1:
      prod: ami-0062dbf6b829f04e1
      test: ami-04669a22aad391419
    us-west-2:
      prod: ami-0ab193018f3e9351b
      test: ami-03c7c1f17ee073747
    eu-west-1:
      prod: ami-04f7efe62f419d9f5
      test: ami-0e23c576dacf2e3df
  
  
Resources:
  MySecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH and HTTP # Required
      GroupName: muratsecgrpcfn
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC # we'll write afterwards

  MyTargetGrp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckPort: 80 # kendim ekledim
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      IpAddressType: ipv4 
      Name: murattargetgrpcfn
      Port: 80
      Protocol: HTTP 
      ProtocolVersion: HTTP1 # kendim ekledim
      TargetType: instance # kendim ekledim
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPC # we'll write afterwards

  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
          - RegionImageMap
          - !Ref "AWS::Region"
          - !Ref EnvType

        InstanceType: !Ref InstanceType
        KeyName: !Ref MyKeyPair
        SecurityGroupIds:
          - !GetAtt MySecGrp.GroupId #!Ref MySecGrp şeklinde de olurdu.
        UserData: !Base64 |  
          #!/bin/bash
          #update os
          yum update -y
          #install apache server
          yum install -y httpd
          # get private ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          # get public ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          # get date and time of server
          DATE_TIME=`date`
          # set all permissions
          chmod -R 777 /var/www/html
          # create a custom index.html file
          echo "<html>
              <head>
              <title> Application Load Balancer</title>
              </head>
              <body>
                  <h1>Testing Application Load Balancer</h1>
                  <h2>Congratulations! You have created an instance from Launch Template</h2>
                  <h3>This web server is launched from the launch template by Murat via CFN</h3>
                  <p>This instance is created at <b>$DATE_TIME</b></p>
                  <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
                  <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
              </body>
              </html>" > /var/www/html/index.html
              # start apache server
              systemctl start httpd
              systemctl enable httpd
      LaunchTemplateName: muratltcfn

  MyELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: muratelbcfn
      Scheme: internet-facing  # ben ekledim
      SecurityGroups: 
        - !GetAtt MySecGrp.GroupId #!Ref MySecGrp şeklinde de olurdu ama biz sec grpsta getatt kullanıyoruz.
      Subnets: !Ref Subnets  # aşağıda "-" ile yazsaydım nested array olurdu, yanlış olurdu.
      Type: application  # ben ekledim

  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref MyTargetGrp  # !GetAtt MyTargetGrp.TargetGroupArn veya !GetAtt murattargetgrpcfn.TargetGroupName  şeklinde de olurdu.
          Type: forward
      LoadBalancerArn: !Ref MyELB # Required
      Port: 80
      Protocol: HTTP

  MyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: muratasgcfn
      DesiredCapacity: 1
      HealthCheckGracePeriod: 300  # ben ekledim
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: 1
      MaxSize: 4 # Required
      MinSize: 1 # Required
      TargetGroupARNs: 
        - !Ref MyTargetGrp  # !GetAtt MyTargetGrp.TargetGroupArn veya !GetAtt murattargetgrpcfn.TargetGroupName  şeklinde de olurdu.
      VPCZoneIdentifier: !Ref Subnets

  MyASGPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref MyASG # Required
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization 
        TargetValue: 60.0     
      
Outputs:
  DNSCFN:
    Description: DNS of ELB
    Value: !Join 
    - ''
    - - 'http://'
      - !GetAtt MyELB.DNSName


# Outputs: bu bloğun tamamı da bu şekilde JOIN değil SUB fonksiyonu ile de olur. Denedim çalıştı.
  # ALBDNS:  
    # Value: !Sub
     # - http://${PublicAddress}
     # - PublicAddress: !GetAtt MyALB.DNSName

    


